# NOTE: update this with your service name
service: slack-mute

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-mocha-plugin

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: yarn
  serverless-offline:
    port: 8080
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      migrate: true

provider:
  name: aws
  runtime: nodejs8.10
  region: ${file(./env.yml):REGION}
  environment: ${file(./env.yml)}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}/*/*"

functions:
  button:
    handler: handlers/slack/auth.button
    events:
      - http:
          path: slack/button
          method: get
          cors: true

  authorize:
    handler: handlers/slack/auth.authorize

  oauth:
    handler: handlers/slack/auth.oauth
    events:
      - http:
          path: slack/oauth
          method: get
          cors: true

  muttedGet:
    handler: handlers/slack/muted.get
    events:
      - http:
          path: slack/muted
          method: get
          cors: true
          authorizer: authorize

  muttedSet:
    handler: handlers/slack/muted.set
    events:
      - http:
          path: slack/muted
          method: post
          cors: true
          authorizer: authorize

  historyGet:
    handler: handlers/slack/history.get
    events:
      - http:
          path: slack/history
          method: get
          cors: true
          authorizer: authorize

  historyDelete:
    handler: handlers/slack/history.delete
    events:
      - http:
          path: slack/history
          method: delete
          cors: true
          authorizer: authorize

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: uid
            AttributeType: S
        KeySchema:
          -
            AttributeName: uid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
